plugins {
	id 'java'
	// 	Spring Cloud Gateway는 Spring Boot 2.x 을 기반으로 구축되었기 때문에 3.x 버전에서는 의도한 대로 작동을 안함.
	// 예) 라우팅 안됨, /actuator/gateway/routes에서 정보를 확인할 수 없음 등..
//	id 'org.springframework.boot' version '3.3.3'
//	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.9")
	set('testcontainersVersion', "1.19.8")
}

dependencies {
//	implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.session:spring-session-data-redis'

	// 라우트 확인을 위해 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

// 스프링 부트에서 제공하는 빌드팩을 이용해 이미지 만드는 플러그인 설정 시작
bootBuildImage {
	imageName = "${project.name}" // 그래들의 프로젝트 설정에서 정의한 이름과 같음. 버전 번호를 사용하지 않고 암묵적인 latest 태그를 사용한다.
	environment = ["BP_JVM_VERSION": "17.*"] // 이미지에 설치할 JVM 버전

	// 컨테이너 저장소 인증을 설정하기 위한 섹션. 값은 그래들 속성을 통해 전달됨
	docker {
		publishRegistry {
			username = project.findProperty("registryUsername")
			password = project.findProperty("registryToken")
			url = project.findProperty("registryUrl")
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
